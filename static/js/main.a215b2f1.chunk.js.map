{"version":3,"sources":["component/NavBar.js","component/Search.js","component/poke.js","component/Footer.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isOpen","toggle","bind","assertThisInitialized","setState","react_default","a","createElement","reactstrap_es","color","light","expand","href","Name","onClick","navbar","className","nav","inNavbar","caret","right","divider","Component","Search","onSubmit","loginHandler","sm","md","size","offset","type","name","id","placeholder","prevPokemon","nextPokemon","PokeVis","api","pokeId","data","load","_this2","fetch","then","result","json","evolution","chain","_this3","gender","_this$props","pokeType","types","stats","damage","damage_relations","src","sprites","front_default","alt","back_default","front_shiny","back_shiny","map","key","height","weight","stat","base_stat","value","double_damage_from","half_damage_from","no_damage_from","double_damage_to","half_damage_to","no_damage_to","Footer","App","isFound","pokeData","searchHandler","search","e","preventDefault","target","username","id_name","API_URI","response","url","data2","_this$state","NavBar_NavBar","Search_Search","poke_PokeVis","Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a215b2f1.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport '../App.css';\r\n\r\nimport { Navbar, Nav, NavItem, NavLink, NavbarBrand, NavbarToggler, Collapse, UncontrolledDropdown, DropdownItem, DropdownMenu, DropdownToggle} from 'reactstrap';\r\n\r\n\r\nexport default class NavBar extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    \r\n    this.state = {\r\n      isOpen: true\r\n    }\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n\r\n  toggle(){\r\n    this.setState({isOpen: !this.state.isOpen})\r\n  }\r\n\r\n  render(){\r\n    const {props} = this;\r\n\r\n    return (\r\n      <div>\r\n        <Navbar color=\"light\" light expand=\"md\">\r\n          <NavbarBrand href=\"/\">{props.Name}</NavbarBrand>\r\n          <NavbarToggler onClick={this.toggle} />\r\n          <Collapse isOpen={this.state.isOpen} navbar>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              <NavItem>\r\n                <NavLink href=\"/components/\"></NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink href=\"https://github.com/reactstrap/reactstrap\">GitHub</NavLink>\r\n              </NavItem>\r\n              <UncontrolledDropdown nav inNavbar>\r\n                <DropdownToggle nav caret>\r\n                  Options\r\n                </DropdownToggle>\r\n                <DropdownMenu right>\r\n                  <DropdownItem>\r\n                    Option 1\r\n                  </DropdownItem>\r\n                  <DropdownItem>\r\n                    Option 2\r\n                  </DropdownItem>\r\n                  <DropdownItem divider />\r\n                  <DropdownItem>\r\n                    Reset\r\n                  </DropdownItem>\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n            </Nav>\r\n          </Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport '../App.css';\r\n\r\nimport { Container, Row, Col, Button, Form, FormGroup, Input } from 'reactstrap';\r\n\r\n\r\nexport default class Search extends Component {\r\n  render(props){\r\n    //const {props} = this;\r\n    return (\r\n      <Container>\r\n        <Row onSubmit={this.props.loginHandler}>\r\n          <Col className={\"mt-2\"} sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n            <Form>\r\n              <FormGroup>\r\n                <Input type=\"text\" name=\"username\" id=\"username\" placeholder=\"Name or ID\" />\r\n              </FormGroup>\r\n            </Form>\r\n            <hr/>\r\n            <div>\r\n              <Button color=\"primary\" onClick={this.props.prevPokemon}>Indietro</Button>\r\n              <Button color=\"primary\" onClick={this.props.nextPokemon} className=\"float-right\">Avanti</Button>\r\n\r\n            </div>\r\n\r\n\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport '../App.css';\r\n\r\nimport {Progress, Container, Row, Col, ListGroup, ListGroupItem  } from 'reactstrap';\r\n\r\nexport default class PokeVis extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.api = \"https://pokeapi.co/api/v2/\";\r\n\r\n    this.state = {\r\n      pokeId: this.props.data.id,\r\n      load: false\r\n    };\r\n  }\r\n\r\n  \r\n\r\n  fetchEvolutionChain(){\r\n    fetch(this.api + 'evolution-chain/' + this.state.pokeId + '/')\r\n      .then(result => result.json())\r\n      .then(data => {\r\n        this.setState({\r\n          evolution: data.chain\r\n        })\r\n      })\r\n  }\r\n\r\n  fetchGender(){\r\n    fetch(this.api + 'gender/' + this.state.pokeId + '/')\r\n      .then(result => result.json())\r\n      .then(data => {\r\n        this.setState({\r\n          gender: data,\r\n          load: true\r\n        })\r\n      })\r\n  }\r\n\r\n\r\n  render(){\r\n    const {data, pokeType} = this.props;\r\n    const {types, stats} = data;\r\n    const damage = pokeType.damage_relations;\r\n\r\n    return(\r\n      <Container>\r\n        <hr></hr>\r\n        <Row>\r\n          <Col className=\"mt-3\"   md={{ size: 10, offset: 1 }}>\r\n            <h1 className=\"text-center\">\r\n              {data.name} <small className=\"text-muted\">#{data.id}</small>\r\n            </h1>\r\n\r\n            <Row>\r\n              <Col className=\"border-right\" md=\"4\">\r\n                <h5>Normal:</h5>\r\n                <Row>\r\n                  <Col>\r\n                    <img className=\"img-responsive\" src={data.sprites.front_default} alt=\"Front default\"></img>\r\n                  </Col>\r\n                  <Col>\r\n                    <img className=\"img-responsive\" src={data.sprites.back_default} alt=\"Back default\"></img>\r\n                  </Col>\r\n                </Row>\r\n                <hr />\r\n\r\n                <h5>Shiny:</h5>\r\n                <Row>\r\n                  <Col>\r\n                    <img src={data.sprites.front_shiny} alt=\"Front shiny\"></img>\r\n                  </Col>\r\n                  <Col>\r\n                    <img src={data.sprites.back_shiny} alt=\"Back shiny\"></img>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n\r\n\r\n              <Col md=\"8\">\r\n                <Row>\r\n                  <Col>\r\n                    <h5>Type:</h5>\r\n                    <ListGroup>\r\n                      {\r\n                        types.map((type, key) => {\r\n                          return (\r\n                            <ListGroupItem key={key}>{type.type.name}</ListGroupItem>\r\n                          );\r\n                        })\r\n                      }\r\n                    </ListGroup><br/>\r\n                    \r\n                  </Col>\r\n                  <Col>\r\n                    <h5>Height:</h5>\r\n                    {data.height / 10}m\r\n\r\n                    <hr/>\r\n\r\n                    <h5>Weight:</h5>\r\n                    {data.weight / 10}kg\r\n                  </Col>\r\n                </Row>\r\n                \r\n                <hr/>\r\n\r\n                <h5>Base stats:</h5>\r\n                <ListGroup>\r\n                  {\r\n                    stats.map((stat, key) => {\r\n                      return (\r\n                        <ListGroupItem key={key}>\r\n                          {stat.stat.name}: <span className=\"text-muted\">{stat.base_stat}</span>\r\n                          <Progress value={stat.base_stat / 2.3} />\r\n                        </ListGroupItem>\r\n                      );\r\n                    })\r\n                  }\r\n                </ListGroup>\r\n\r\n                <hr/>\r\n\r\n                <Row>\r\n                  <Col>\r\n                    <h5>Damage from:</h5>\r\n                    <ListGroup>\r\n                      <h6>2x</h6>\r\n                      {\r\n                        damage.double_damage_from.map((data, key) => {\r\n                          return (\r\n                            <ListGroupItem key={key}>{data.name}</ListGroupItem>\r\n                          );\r\n                        })\r\n                      }\r\n\r\n                      <hr/>\r\n\r\n                      <h6>0.5x</h6>\r\n                      {\r\n                        damage.half_damage_from.map((data, key) => {\r\n                          return (\r\n                            <ListGroupItem key={key}>{data.name}</ListGroupItem>\r\n                          );\r\n                        })\r\n                      }\r\n\r\n                      <hr/>\r\n\r\n                      <h6>0x</h6>\r\n                      {\r\n                        damage.no_damage_from.map((data, key) => {\r\n                          return (\r\n                            <ListGroupItem key={key}>{data.name}</ListGroupItem>\r\n                          );\r\n                        })\r\n                      }\r\n                    </ListGroup>\r\n                  </Col>\r\n                  <Col>\r\n                    <h5>Damage to:</h5>\r\n                    <ListGroup>\r\n                      <h6>2x</h6>\r\n                      {\r\n                        damage.double_damage_to.map((data, key) => {\r\n                          return (\r\n                            <ListGroupItem key={key}>{data.name}</ListGroupItem>\r\n                          );\r\n                        })\r\n                      }\r\n\r\n                      <hr/>\r\n\r\n                      <h6>0.5x</h6>\r\n                      {\r\n                        damage.half_damage_to.map((data, key) => {\r\n                          return (\r\n                            <ListGroupItem key={key}>{data.name}</ListGroupItem>\r\n                          );\r\n                        })\r\n                      }\r\n\r\n                      <hr />\r\n\r\n                      <h6>0x</h6>\r\n                      {\r\n                        damage.no_damage_to.map((data, key) => {\r\n                          return (\r\n                            <ListGroupItem key={key}>{data.name}</ListGroupItem>\r\n                          );\r\n                        })\r\n                      }\r\n                    </ListGroup><br />\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}","import React, {Component} from 'react';\r\nimport {Col, Row, Container} from 'reactstrap';\r\n\r\nexport default class Footer extends Component {\r\n  render(){\r\n    return(\r\n      <Container className=\"mt-3\">\r\n        <Row>\r\n          <Col>\r\n            <h6 className=\"text-center\">2018</h6>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n  \r\n}","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\n//component\r\nimport NavBar from './component/NavBar';\r\nimport Search from './component/Search';\r\nimport PokeVis from './component/poke';\r\nimport Footer from './component/Footer';\r\n\r\nclass App extends Component {\r\n  constructor(props){\r\n    super(props)\r\n\r\n    this.state = {\r\n      isFound: false,\r\n      pokeId: 1,\r\n      pokeData: null\r\n    }\r\n\r\n    this.searchHandler = this.searchHandler.bind(this);\r\n    this.search = this.search.bind(this);\r\n    this.nextPokemon = this.nextPokemon.bind(this);\r\n    this.prevPokemon = this.prevPokemon.bind(this);\r\n\r\n  }\r\n\r\n  searchHandler(e){\r\n    e.preventDefault();\r\n    const {target} = e;\r\n\r\n    this.search(target.username.value)\r\n    \r\n  }\r\n\r\n  search(id_name) {\r\n    const API_URI = \"https://pokeapi.co/api/v2/\";\r\n\r\n    this.setState({\r\n      isFound: false\r\n    })\r\n\r\n    fetch(API_URI + \"pokemon/\" + id_name + \"/\")\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        this.setState({\r\n          pokeData: data,\r\n          pokeId: data.id\r\n        })\r\n\r\n        fetch(data.types[0].type.url)\r\n          .then(response => response.json())\r\n          .then(data2 => {\r\n            this.setState({\r\n              pokeType: data2,\r\n              isFound: true\r\n            })\r\n          })\r\n      })\r\n  }\r\n\r\n  nextPokemon(){\r\n    if (this.state.pokeId < 802) {\r\n      this.setState({\r\n        pokeId: this.state.pokeId+1\r\n      })\r\n      this.search(this.state.pokeId+1)\r\n    }\r\n  }\r\n\r\n  prevPokemon() {\r\n    if(this.state.pokeId > 1){\r\n      this.setState({\r\n        pokeId: this.state.pokeId - 1\r\n      })\r\n      this.search(this.state.pokeId - 1)\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.search(this.state.pokeId);\r\n  }\r\n\r\n  render() {\r\n    const {pokeData, pokeType, isFound} = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <NavBar Name=\"PokeFinder\" />\r\n        <Search loginHandler={this.searchHandler} nextPokemon={this.nextPokemon} prevPokemon={this.prevPokemon}/> \r\n        {isFound ? <PokeVis data={pokeData} pokeType={pokeType}/>  : null}\r\n        <Footer />\r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}